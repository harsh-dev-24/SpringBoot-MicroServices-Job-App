spring.application.name=job-service



################microservice configs start########################
server.port=8082
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:jobms
#show ddl queries logs
spring.jpa.generate-ddl=true

# Show all executed SQL queries
spring.jpa.show-sql=true

#postgresql db configs
spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=harsh
spring.datasource.password=1234
spring.jpa.databse=POSTGRESQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Format the SQL queries for better readability
spring.jpa.properties.hibernate.format_sql=true


################microservice configs end########################


#################Eureka Client Config########################

# property for the address of Eureka Server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
# property to register current service with eureka service registry
eureka.client.register-with-eureka=true
# property to fetch registry details
eureka.client.fetch-registry=true

#################Eureka Client Config########################

#############ZIPKIN###############

# trace each and every request
# can keep 0.6 for prod application
management.tracing.sampling.probability=1.0

#############ZIPKIN###############

#############Fetch Properties From Config Server##################

#we can use "optional" keyword before setting configserver path so that it will use application.properties 
#to set properties if config server is not available/down
spring.config.import=optional:configserver:http://localhost:8080/
#spring.profiles.active=dev
#############Fetch Properties From Config Server##################

###############Resilience4J###############
# Resilience4J

#circuit-breaker module config
# companyBreaker = instance name of circuit breaker
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

# Retry module config
resilience4j.circuitbreaker.instances.companyBreaker.max-attempts=5
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration=2s

# Ratelimiter module config
resilience4j.ratelimitr.instances.companyBreaker.timeout-duration=0
#seconds
resilience4j.ratelimitr.instances.companyBreaker.limit-refresh-period=10
#calls
resilience4j.ratelimitr.instances.companyBreaker.limit-for-period=0

# Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
###############Resilience4J###############
